#!/bin/bash

# PROJECTS

# This is a new line
PROJECTS_ROOT="$HOME/Projects"
ENGINEERING="$PROJECTS_ROOT/Engineering"
COMPILERS="$PROJECTS_ROOT/compilers"
SETTINGS="$ENGINEERING/bashrc_design"
NOTES="$SETTINGS/notes"
BASH_PROFILE_PATH="$HOME/.bash_profile"
TRELLO_VARS_FILE="$SETTINGS/.trello_vars"

#Documentation

alias iterm2="$NOTES/iterm2.md"

# Environment variables
source "$TRELLO_VARS_FILE"

# Shortcuts

alias h="history"
alias c="clear"
alias q="exit"
alias cs="clear;ls"
alias chrome="open -a \"Google Chrome\""
alias gr="grep"
alias p="cat"
alias pd="pwd"
alias lsa="ls -la"
alias mkdir="mkdir -pv"
alias ll="ls -lhA"
alias t="time"
alias k="kill"
alias o="open"
alias wget="wget -c"  # Continue the download in case of a problem
alias psg="ps | grep -v grep | grep -i -e VSZ -e"
alias null="/dev/null"
alias bashrc="vim $HOME/.bash_profile"
alias term_size='echo "Rows=$(tput lines) Cols=$(tput cols)"'
alias src="clear;source $BASH_PROFILE_PATH"


# Navigation
alias home="cd $HOME"
alias root="cd /"
alias dtop="cd $HOME/Desktop"
alias gdrive="cd /Google\ Drive"
alias ..="cd .."
alias ...="cd ..;cd .."
alias ....="cd ..;cd ..;cd .."

# Project navigation
alias prj="cd $PROJECTS_ROOT"
alias exploit="cd $PROJECTS_ROOT/exploit"
alias engineering="cd $ENGINEERING"
alias eng=engineering
alias compilers="cd $COMPILERS"

# Github aliases
alias g="git status"
alias ga="git add -u"
alias gaa="git add ."
alias gc="git commit -m"
alias gpl="git pull"
alias gph="git push"
alias gbc="git checkout"
alias gbcn="git checkout -b"
alias gb="git branch"
alias gba="gb -av"
alias gbd="gb -d"
alias gbrnm="gb -m"
alias gl="git log"
alias gd="git diff"
alias clone="git clone"
alias merge="git merge"


# Global function aliases
alias ping="ping -c 10"
alias bd='cd "$OLDPWD"'
alias diskspace="du -S | sort -n -r |more"
alias treed='tree -CAFd'
alias tree='tree -CAhF --dirsfirst'
alias mountedinfo='df -hT'
alias mktar='tar -cvf'
alias mkbz2='tar -cvjf'
alias mkgz='tar -cvzf'
alias untar='tar -xvf'
alias unbz2='tar -xvjf'
alias ungz='tar -xvzf'
alias cpu="grep 'cpu ' /proc/stat | awk '{usage=(\$2+\$4)*100/(\$2+\$4+\$5)} END {print usage}' | awk '{printf(\"%.1f\n\", \$1)}'"



# Local Function aliases
alias trello="trello_open"
alias proj="project_open"
alias projc="project_open_with_code"


# Helper Functions
get_branchname () {
    export BRANCH_NAME=$(git symbolic-ref --short HEAD)
}

get_reponame() {
    export REPO_NAME=$(basename $(git rev-parse --show-toplevel))
}

get_version()

cd() {      
    builtin cd "$1"
    if is_github_repo;then
        g;
    else
        export BRANCH_NAME=""
        export REPO_NAME=""
    fi
}

function git_push() {

    branchname
    retcode=$?
    non_push_suffix="_local"
    # Only push if branch_name was found (my be empty if in detached head state)
    if [ $retcode -eq 0 ] ; then
            #Only push if branch_name does not end with the non-push suffix
            if [[ "$BRANCH_NAME" != *$"non_push_suffix" ]] ; then
                echo 
                echo *** Pushing current branch $BRANCH_NAME to origin;
                echo
                git push origin "$BRANCH_NAME"
            fi
    fi
}

function git_commit_and_push() {
    re="^(add|update|remove|fix-(.){5,50})"
    if [[ "$1" =~  $re ]]; then
        get_branchname;
        get_reponame;
        ga ;gc $1;git_push;
        chrome https://github.com/michael-karotsieris/$REPO_NAME/compare/$BRANCH_NAME?expand=1 
    else
        echo "Bad commit message: " $1
    fi
}

alias gcp="git_commit_and_push"


function is_github_repo () {
    if $(git rev-parse --is-inside-work-tree 2>&1); then
        return 0
    else
        return 1
    fi
}


function trello_open () {
    
    projectName="$1"
    
    if ! [ "$projectName" ];then
        o $BOARDS_TRELLO
    fi

    if [ "$projectName" = "compilers" ] || [ "$projectName" = "cmp" ]; then
        o $COMPILERS_TRELLO
    fi

    if [ "$projectName" = "eng" ] || [ "$projectName" = "engineering" ]; then
        o  $ENGINEERING_TRELLO
    fi
}


function project_open () {  
    projectName="$1"
    if [ "$projectName" = "compilers" ] || [ "$projectName" = "cmp" ]; then
        cd $PROJECTS_ROOT/"compilers";
        if is_github_repo;then
            echo "Found existing github repo..."
            git log;
        fi

    fi
    if [ "$projectName" = "eng" ] || [ "$projectName" = "engineering" ]; then
        cd $PROJECTS_ROOT/"Engineering"
        if is_github_repo;then    
            echo "here" 
            echo "Found existing github repo..."
            git log;
        fi
    fi
} 

function project_open_with_code () {  
    projectName="$1"
    if [ "$projectName" = "compilers" ] || [ "$projectName" = "cmp" ]; then
        cd $PROJECTS_ROOT/"compilers" && code .;

    fi
    if [ "$projectName" = "eng" ] || [ "$projectName" = "engineering" ]; then
        cd $PROJECTS_ROOT/"Engineering" && code .;
    fi
} 

function markdown_viewer () {
    echo "$1"
    if [ -f "$1" ]; then
        echo "hiiii"  
        mdless "$1";
    fi
}

alias notes="markdown_viewer"

function reload() {                                         
    . $HOME/.bash_profile;
}

# Goes up a specified number of directories (i.e 4)
up ()
{
local d=""
	limit=$1
for ((i=1 ; i <= limit ; i++))
do
			d=$d/..
done
	d=$(echo $d | sed 's/^\///')
if [ -z "$d" ]; then
		d=..
fi
cd $d
}


# IP address lookup
alias whatismyip="whatsmyip"
function whatsmyip ()
{
    # Dumps a list of all IP addresses for every device
    /sbin/ifconfig |grep -B1 "inet addr" |awk '{ if ( $1 == "inet" ) { print $2 } else if ( $2 == "Link" ) { printf "%s:" ,$1 } }' |awk -F: '{ print $1 ": " $3 }';
    # Internal IP Lookup
    echo -n "Internal IP: " ; /sbin/ifconfig eth0 | grep "inet addr" | awk -F: '{print $2}' | awk '{print $1}'
    # External IP Lookup
    echo -n "External IP: " ; curl http://smart-ip.net/myip
}

alias netscan="/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -s"
tput bold
echo "   _______ ________ _________               
    ___    |___  __ \__  ____/_______________
    __  /| |__  /_/ /_  /     __  ___/_  ___/
    _  ___ |_  _, _/ / /___   _  /    / /__  
    /_/  |_|/_/ |_|  \____/   /_/     \___/             @CEPSTRUMLABS

" 
PS1+=$LOGO
tput sgr0

